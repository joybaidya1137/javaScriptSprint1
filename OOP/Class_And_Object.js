/*
 1.Class = Blueprint (‡¶®‡¶ï‡¶∂‡¶æ/‡¶õ‡¶æ‡¶Å‡¶ö/‡¶°‡¶ø‡¶ú‡¶æ‡¶á‡¶®)
     ‡¶è‡¶ï‡¶ü‡¶æ object ‡¶ï‡ßá‡¶Æ‡¶® ‡¶π‡¶¨‡ßá, ‡¶ï‡ßÄ ‡¶ï‡ßÄ property ‡¶Ü‡¶∞ method ‡¶•‡¶æ‡¶ï‡¶¨‡ßá‡•§
      
 2. Object = Instance of Class (‡¶®‡¶ï‡¶∂‡¶æ ‡¶•‡ßá‡¶ï‡ßá ‡¶§‡ßà‡¶∞‡¶ø ‡¶Ü‡¶∏‡¶≤ ‡¶¨‡¶∏‡ßç‡¶§‡ßÅ/‡¶¨‡¶æ‡ßú‡¶ø)  

‚ö°‡¶è‡¶ï ‡¶≤‡¶æ‡¶á‡¶®‡ßá ‡¶Æ‡¶®‡ßá ‡¶∞‡¶æ‡¶ñ‡ßã:
   Class = ‡¶®‡¶ï‡¶∂‡¶æ (blueprint), Object = ‡¶∏‡ßá‡¶á ‡¶®‡¶ï‡¶∂‡¶æ ‡¶•‡ßá‡¶ï‡ßá ‡¶¨‡¶æ‡¶®‡¶æ‡¶®‡ßã ‡¶¨‡¶æ‡¶∏‡ßç‡¶§‡¶¨ ‡¶ú‡¶ø‡¶®‡¶ø‡¶∏ (instance)‡•§

*/
class car{

   /*
   1.constructor:
      Class field ‡¶¶‡¶ø‡ßü‡ßá ‡¶°‡¶ø‡¶´‡¶≤‡ßç‡¶ü property ‡¶¶‡¶ø‡¶§‡ßá ‡¶™‡¶æ‡¶∞‡ßã, constructor ‡¶è ‡¶á‡¶®‡¶ø‡¶∂‡¶ø‡ßü‡¶æ‡¶≤‡¶æ‡¶á‡¶ú ‡¶ï‡¶∞‡ßã‡•§
      Constructor ‡¶¶‡¶ø‡¶≤‡ßá ‚Üí ‡¶§‡ßÅ‡¶Æ‡¶ø ‡¶ö‡¶æ‡¶á‡¶≤‡ßá object ‡¶¨‡¶æ‡¶®‡¶æ‡¶®‡ßã‡¶∞ ‡¶∏‡¶Æ‡ßü ‡¶Ü‡¶≤‡¶æ‡¶¶‡¶æ ‡¶Æ‡¶æ‡¶® ‡¶¶‡¶ø‡¶§‡ßá ‡¶™‡¶æ‡¶∞‡¶¨‡ßá‡•§
      ‚ùå ‡¶Ø‡¶¶‡¶ø constructor ‡¶®‡¶æ ‡¶•‡¶æ‡¶ï‡ßá ‚Üí ‡¶∏‡¶¨ object ‡¶è‡¶ï‡¶á default ‡¶Æ‡¶æ‡¶® ‡¶™‡¶æ‡¶¨‡ßá‡•§

Constructor ‡¶ï‡ßÄ ‡¶ï‡¶∞‡ßá?
üëâ constructor ‡¶π‡¶≤‡ßã class-‡¶è‡¶∞ ‡¶¨‡¶ø‡¶∂‡ßá‡¶∑ method
       ‡¶è‡¶ï‡¶ü‡¶ø class ‡¶è ‡¶ï‡ßá‡¶¨‡¶≤‡¶Æ‡¶æ‡¶§‡ßç‡¶∞ ‡¶è‡¶ï‡¶ü‡¶ø constructor ‡¶•‡¶æ‡¶ï‡ßá‡•§

üëâ object ‡¶¨‡¶æ‡¶®‡¶æ‡¶®‡ßã‡¶∞ ‡¶∏‡¶Æ‡ßü new keyword ‡¶¶‡¶ø‡ßü‡ßá ‡¶°‡¶æ‡¶ï‡¶æ ‡¶π‡ßü
üëâ property ‡¶ó‡ßÅ‡¶≤‡ßã initialize (‡¶™‡ßç‡¶∞‡¶•‡¶Æ ‡¶Æ‡¶æ‡¶® ‡¶∏‡ßá‡¶ü ‡¶ï‡¶∞‡¶æ) ‡¶ï‡¶∞‡ßá

Constructor = object ‡¶¨‡¶æ‡¶®‡¶æ‡¶®‡ßã‡¶∞ ‡¶∏‡¶Æ‡ßü ‡¶™‡ßç‡¶∞‡ßã‡¶™‡¶æ‡¶∞‡ßç‡¶ü‡¶ø ‡¶á‡¶®‡¶ø‡¶∂‡¶ø‡ßü‡¶æ‡¶≤‡¶æ‡¶á‡¶ú ‡¶ï‡¶∞‡¶æ‡¶∞ ‡¶¨‡¶ø‡¶∂‡ßá‡¶∑ method‡•§
   */
  constructor(brand,model){ // special method = constructor
   this.brand = brand;     // object property ‡¶∏‡ßá‡¶ü ‡¶ï‡¶∞‡¶õ‡ßá
   this.model = model; 
  }



  //Function ‚Üí Class ‡¶è‡¶∞ ‡¶¨‡¶æ‡¶á‡¶∞‡ßá, ‡¶®‡¶ø‡¶ú‡ßá independent‡•§
  //Method ‚Üí Class ‡¶è‡¶∞ ‡¶≠‡¶ø‡¶§‡¶∞‡ßá, object ‡¶è‡¶∞ ‡¶∏‡¶æ‡¶•‡ßá ‡¶Ø‡ßÅ‡¶ï‡ßç‡¶§‡•§ 
  // showinfo is method because Class ‡¶è‡¶∞ ‡¶≠‡¶ø‡¶§‡¶∞‡ßá, object ‡¶è‡¶∞ ‡¶∏‡¶æ‡¶•‡ßá ‡¶Ø‡ßÅ‡¶ï‡ßç‡¶§‡•§ 
  showinfo(){
   return `${this.brand} "," ${this.model}`;
   
  }


//‡¶Ø‡¶¶‡¶ø ‡¶§‡ßÅ‡¶Æ‡¶ø ‡¶∂‡ßÅ‡¶ß‡ßÅ ‡¶™‡ßç‡¶∞‡¶ø‡¶®‡ßç‡¶ü ‡¶ï‡¶∞‡¶§‡ßá ‡¶ö‡¶æ‡¶ì:
showPrint() {
    console.log(this.brand + "," + this.model);

}
 
//‡¶Ø‡¶¶‡¶ø ‡¶§‡ßÅ‡¶Æ‡¶ø ‡¶Æ‡¶æ‡¶® return ‡¶ï‡¶∞‡¶§‡ßá ‡¶ö‡¶æ‡¶ì:
show_return() {
    return this.brand + "," + this.model;
}
}

const obj = new car("Toyota", "Corolla");
const obj1 = new car("Honda", "Civic");


console.log(obj.model,obj.brand);  // "Toyota", "Corolla"
console.log(obj.model) // "Toyota"

console.log(obj.showinfo());

console.log(obj1.model,obj1.brand); //"Honda", "Civic"
console.log(obj1.model);//Honda


console.log("\n"+"Return and print output: ")
obj.showPrint();
obj1.showPrint();


obj.show_return();
obj1.show_return();





//Advance use of constructor:
class User{

   constructor(name,age=18){  // default ‡¶Æ‡¶æ‡¶®‡¶ì ‡¶¶‡ßá‡¶ì‡ßü‡¶æ ‡¶Ø‡¶æ‡ßü
      this.name = name;
      this.age=age;
   }


     infoDasplay(){
      return `hi i am ${this.name}, ${this.age}`
     }
     /*
      1.return: ‡¶π‡¶≤‡ßã function ‡¶¨‡¶æ method ‡¶è‡¶∞ execution ‡¶∂‡ßá‡¶∑ ‡¶ï‡¶∞‡ßá ‡¶ï‡ßã‡¶®‡ßã value ‡¶ï‡ßá ‡¶¨‡¶æ‡¶á‡¶∞‡ßá ‡¶™‡¶æ‡¶†‡¶æ‡¶®‡ßã‡•§
                ‡¶Æ‡¶æ‡¶®‡ßá, function ‡¶è‡¶∞ ‡¶≠‡ßá‡¶§‡¶∞‡ßá ‡¶Ø‡¶æ calculation ‡¶π‡¶≤‡ßã ‡¶∏‡ßá‡¶ü‡¶æ ‡¶Ü‡¶Æ‡¶∞‡¶æ ‡¶¨‡¶æ‡¶á‡¶∞‡ßá ‡¶¨‡ßç‡¶Ø‡¶¨‡¶π‡¶æ‡¶∞ ‡¶ï‡¶∞‡¶§‡ßá ‡¶ö‡¶æ‡¶á‡¶≤‡ßá return ‡¶ï‡¶∞‡¶§‡ßá ‡¶π‡ßü‡•§
      */

                

      
}

 const u1= new User("joy",50);
 const u2 = new User("joy");   // age = 18 (default)


  console.log(u1.infoDasplay());
  console.log(u2.infoDasplay());




// ..........................................................................this................................................
    // Constructor ‡¶è‡¶∞ ‡¶≠‡ßá‡¶§‡¶∞‡ßá this = ‡¶®‡¶§‡ßÅ‡¶® object ‡¶¨‡¶æ‡¶®‡¶æ‡¶®‡ßã ‡¶π‡¶ö‡ßç‡¶õ‡ßá ‡¶Ø‡ßá‡¶ü‡¶æ, ‡¶∏‡ßá‡¶ü‡¶æ‡¶á‡•§
   // Method ‡¶è‡¶∞ ‡¶≠‡ßá‡¶§‡¶∞‡ßá this = ‡¶Ø‡ßá object method ‡¶ï‡ßá call ‡¶ï‡¶∞‡¶õ‡ßá, ‡¶∏‡ßá‡¶ü‡¶æ‡¶á‡•§

   class C {
      constructor(brand, model) {
    // Constructor ‡¶è‡¶∞ ‡¶≠‡ßá‡¶§‡¶∞‡ßá `this` ‡¶®‡¶§‡ßÅ‡¶® object ‡¶ï‡ßá ‡¶¨‡ßã‡¶ù‡¶æ‡¶ö‡ßç‡¶õ‡ßá
    this.brand = brand;
    this.model = model;
  }

  showInfo() {
    // Method ‡¶è‡¶∞ ‡¶≠‡ßá‡¶§‡¶∞‡ßá `this` = ‡¶Ø‡ßá object ‡¶¶‡¶ø‡ßü‡ßá method call ‡¶ï‡¶∞‡¶æ ‡¶π‡¶ö‡ßç‡¶õ‡ßá
    return this.brand + " " + this.model;
  }
}

// üëâ Object ‡¶¨‡¶æ‡¶®‡¶æ‡¶≤‡¶æ‡¶Æ
const car1 = new C("Toyota", "Corolla");
const car2 = new C("Honda", "Civic");

// Constructor ‡¶è `this`
console.log(car1.brand, car1.model); // Toyota Corolla
console.log(car2.brand, car2.model); // Honda Civic

// Method ‡¶è `this`
console.log(car1.showInfo()); // Toyota Corolla
console.log(car2.showInfo()); // Honda Civic